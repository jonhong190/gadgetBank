{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/landing/landing.component.css","webpack:///./src/app/landing/landing.component.html","webpack:///./src/app/landing/landing.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LandingComponent } from './landing/landing.component';\n\nconst routes: Routes = [\n  { path: 'landing', component: LandingComponent },\n  { path: '', pathMatch: 'full', redirectTo: '/landing' },\n  { path: '**', pathMatch: 'full', redirectTo: '/landing' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './http.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'app';\n  constructor(private _httpService: HttpService) {\n  }\n  ngOnInit(){\n  }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpService } from './http.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { LandingComponent } from './landing/landing.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LandingComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    NgbModule.forRoot()\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n  constructor(private _http: HttpClient) { \n  } //connecting to the backend routes\n  getCustomers() {\n    return this._http.get('/customers');\n  } //this route will return allUsers.\n  getThisCustomer(username) {\n    return this._http.get('/customer/'+ username);\n  } //this route will return getOneUser. Specific user is queried here\n  postNewCustomer(newcustomer) {\n    return this._http.post('customer/new', newcustomer);\n  } //this route will create a new user through createUser\n  getLoginCustomer(username) {\n    return this._http.get('customer/login/'+ username);\n  } //this route logs in the user through loginUser\n  getOrders(id) {\n    return this._http.get('/customer/' + id + 'orders');\n  } //this route will return all of the orders from a specific customer\n  getThisOrder(order_id) {\n    return this._http.get('/order/' + order_id);\n  } //this route will return oneOrder. Specific order is queried here\n  postNewOrder(username, neworder) {\n    return this._http.post('/customer/' + username + '/order/new', neworder);\n  } //this route will post a new order through newOrder\n  getDeleteOrder(order_id) {\n    return this._http.get('/order/' + order_id + '/delete');\n  } //this route will delete the order through deleteOrder\n  postNewProduct(order_id, newproduct) {\n    return this._http.post('/order/' + order_id + '/product/new', newproduct);\n  } //this route will add a new product base on the order id through newProduct\n  postEditProduct(product_id, product) {\n    return this._http.post('/product/' + product_id + '/edit', product);\n  } //this route should allow the user to edit the product info through editProduct\n  getDeleteProduct(product_id) {\n    return this._http.get('/product/' + product_id + '/delete');\n  } //this route will delete the selected product through deleteProduct\n}","module.exports = \"ul > li{\\r\\n    margin: 10px;\\r\\n}\"","module.exports = \"<!DOCTYPE html>\\n<html>\\n<head>\\n  <title>Landing</title>\\n</head>\\n<body>\\n<div class=\\\"container-fluid\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light\\\"  style=\\\"background-color: #3D99E6;\\\">\\n    <div class=\\\"d-flex flex-grow-1\\\">\\n        <span class=\\\"w-100 d-lg-none d-block\\\"><!-- hidden spacer to center brand on mobile --></span>\\n        <a class=\\\"navbar-brand d-none d-lg-inline-block text-white\\\" href=\\\"#\\\">\\n            Logo  <!-- Logo title goes here -->\\n        </a>\\n        <a class=\\\"navbar-brand-two mx-auto d-lg-none d-inline-block\\\" href=\\\"#\\\">\\n            <img src=\\\"\\\" alt=\\\"logo\\\"> <!-- Logo image goes here -->\\n        </a>\\n        <div class=\\\"w-100 text-right\\\">\\n            <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#myNavbar\\\">\\n                <span class=\\\"navbar-toggler-icon\\\"></span>  <!-- Mobile dynamic button -->\\n            </button>\\n        </div>\\n    </div>\\n    <div class=\\\"collapse navbar-collapse flex-grow-1 text-right\\\" id=\\\"myNavbar\\\">\\n        <ul class=\\\"navbar-nav ml-auto flex-nowrap\\\">\\n            <li class=\\\"nav-item\\\">\\n                <a href=\\\"#\\\" class=\\\"nav-link m-2 menu-item nav-active text-white\\\">How it works</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <a href=\\\"#\\\" class=\\\"nav-link m-2 menu-item text-white\\\">FAQs</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <a href=\\\"#\\\" class=\\\"nav-link m-2 menu-item text-white\\\">Get Cash Now</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <button class=\\\"btn btn-light\\\">Sign Up</button>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <button class=\\\"btn btn-primary\\\">Login</button>\\n            </li>\\n        </ul>\\n    </div>\\n  </nav>\\n</div>\\n</body>\\n</html>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.css']\n})\nexport class LandingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}